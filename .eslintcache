[{"/Users/ritacorreia/workspace/polluto/src/index.js":"1","/Users/ritacorreia/workspace/polluto/src/App.js":"2","/Users/ritacorreia/workspace/polluto/src/components/Card.js":"3","/Users/ritacorreia/workspace/polluto/src/components/Footer.js":"4"},{"size":214,"mtime":1606854965287,"results":"5","hashOfConfig":"6"},{"size":3273,"mtime":1607530679475,"results":"7","hashOfConfig":"6"},{"size":1586,"mtime":1607528363992,"results":"8","hashOfConfig":"6"},{"size":124,"mtime":1606997592679,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"14eizdx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/ritacorreia/workspace/polluto/src/index.js",[],["21","22"],"/Users/ritacorreia/workspace/polluto/src/App.js",["23"],"import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { usePosition } from \"use-position\";\nimport { format, parseISO } from \"date-fns\";\nimport Footer from \"./components/Footer\";\nimport Card from \"./components/Card\";\n\n// Renders app UI\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"polluto-logo\">polluto.</h1>\n\t\t\t<h4 className=\"tagline\">Your real-time air pollution tracker</h4>\n\t\t\t<SimpleMap />\n\n\t\t\t<Footer footerText=\"⚡️ Built by Rita Correia in ReactJS for GA-JSD Dec 2020 ⚡️\" />\n\t\t</div>\n\t);\n}\n\n// Renders Map, stores user's coords on pageload (usePosition)\nconst SimpleMap = () => {\n\tconst { latitude, longitude, error } = usePosition();\n\n\tconst [cardState, setCardState] = useState({\n\t\tlat: null,\n\t\tlng: null,\n\t\tposition: \"absolute\",\n\t\tcity: \"\",\n\t\tstate: \"\",\n\t\tcountry: \"\",\n\t\tts: \"\",\n\t\taqius: \"\",\n\t\tmainus: \"\",\n\t});\n\n\tif (error !== null) {\n\t\treturn (\n\t\t\t<div className=\"loading\">\n\t\t\t\tError getting your current location, please reload page\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!latitude || !longitude) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p className=\"loading\">Loading map...</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst defaultCenter = {\n\t\tlat: latitude,\n\t\tlng: longitude,\n\t};\n\n\tlet zoom;\n\n\t// if (zoom < {6}) {\n\n\t// }\n\n\t// This fetches new pollution information on the given latitude and longitude\n\t// and updates the card state\n\tfunction fetchPollutionAPI(lat, lng) {\n\t\tfetch(\n\t\t\t`https://api.airvisual.com/v2/nearest_city?lat=${lat}&lon=${lng}&key=4a6dd48a-819d-4f42-943c-e84587a03a4f`\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then(function ({ data }) {\n\t\t\t\tconsole.log(\"data\", data);\n\n\t\t\t\t// turns the timestamp string into a javascript Date\n\t\t\t\tconst timestamp = parseISO(data.current.pollution.ts);\n\n\t\t\t\t// turns the javascript Date into a string that we like (based on the formatting options from date-fns)🥰\n\t\t\t\tconst formattedTimestamp = format(timestamp, \"PPpp\");\n\n\t\t\t\tsetCardState({\n\t\t\t\t\tlat: lat,\n\t\t\t\t\tlng: lng,\n\t\t\t\t\tcity: data.city,\n\t\t\t\t\tstate: data.state,\n\t\t\t\t\tcountry: data.country,\n\t\t\t\t\tts: formattedTimestamp,\n\t\t\t\t\taqius: data.current.pollution.aqius,\n\t\t\t\t\tmainus: data.current.pollution.mainus,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t// Renders Google Map and info card (https://github.com/google-map-react/google-map-react/blob/master/API.md)\n\treturn (\n\t\t<div style={{ height: \"90vh\", width: \"100%\" }}>\n\t\t\t<GoogleMapReact\n\t\t\t\tbootstrapURLKeys={{\n\t\t\t\t\tkey: \"AIzaSyA0ilaCkaAdHbwnSicLrPX9AqRRJZjMWAg\",\n\t\t\t\t}}\n\t\t\t\tdefaultCenter={defaultCenter}\n\t\t\t\tdefaultZoom={12}\n\t\t\t\tonChange={({ center, zoom }) => {\n\t\t\t\t\t// this onChange is triggered on map load and map pan/zoom\n\t\t\t\t\tconsole.log(zoom);\n\n\t\t\t\t\t// if (zoom < 9) {\n\t\t\t\t\t// \t<Card /> = null;\n\t\t\t\t\t// }\n\n\t\t\t\t\tfetchPollutionAPI(center.lat, center.lng);\n\t\t\t\t}}\n\t\t\t\tonClick={({ lat, lng }) => {\n\t\t\t\t\t// this onClick is triggered on map click\n\t\t\t\t\tfetchPollutionAPI(lat, lng);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Card\n\t\t\t\t\tlat={cardState.lat}\n\t\t\t\t\tlng={cardState.lng}\n\t\t\t\t\tcity={cardState.city}\n\t\t\t\t\tstate={cardState.state}\n\t\t\t\t\tcountry={cardState.country}\n\t\t\t\t\tts={cardState.ts} //timestamp\n\t\t\t\t\taqius={cardState.aqius} // air quality index US\n\t\t\t\t\tmainus={cardState.mainus} // main pollutant\n\t\t\t\t/>\n\t\t\t</GoogleMapReact>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","/Users/ritacorreia/workspace/polluto/src/components/Card.js",[],["24","25"],"/Users/ritacorreia/workspace/polluto/src/components/Footer.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":58,"column":6,"nodeType":"32","messageId":"33","endLine":58,"endColumn":10},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'zoom' is defined but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]